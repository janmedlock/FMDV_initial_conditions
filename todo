* Remove a_step and z_step properties in the respective solvers

* Combine age_structured.model.Model() and
  age_structured._population.model.Model()

* Age-structured model
  * Find limit cycle
    * Not quite a limit cycle: run solution for longer first?
  * Find equiblibrium eigenvalues
  * Find limit-cycle exponents
  * Try bsr_array(blocksize=(J, J))?

* Combination model
  * Write models.combination._solver.Solver
    * `scipy.sparse.kron(A, B, format=None)`

* Bootstrap up equilibria & limit cycles from simpler models

* Make Solvers inherit from each other
  * Move '_Hq()', '_Fq()', '_Tq()', '_B', etc into _model.solver.Solver()

* Can I find a limit-cycle of say period 6 then see if it is actually
  period 1, 2, or 3?
