* Unstructured model
  * Rework `model.jacobian()` to use `model._solver.step()` and
    automatic differentiation from `_utility.autodiff`
    * `_equilibrium.eigenvalues()`
    * `_fundamental.solution()`

* Time-since-entry model
  * Bootstrap an equilibrium from the unstructured model
    * Use survival function to fill out new dimension

* Age-structured model
  * Bootstrap an equilibrium from the unstructured model
    * Use survival function to fill out new dimension

* Combination model
  * Write numerical method as linear algebra
    * Kronecker product: `\otimes`, `numpy.kron()`
  * Write code

* Can I find a limit-cycle of say period 6 then see if it is actually
  period 1, 2, or 3?
